(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{140:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return b}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(r),f=n,b=l["".concat(c,".").concat(f)]||l[f]||d[f]||a;return r?o.a.createElement(b,i(i({ref:t},u),{},{components:r})):o.a.createElement(b,i({ref:t},u))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,c=new Array(a);c[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var u=2;u<a;u++)c[u]=r[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},77:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(2),o=r(6),a=(r(0),r(140)),c={id:"introduction_netcore",title:"Introduction to the .Net Core REST API application",sidebar_label:"Introduction"},i={unversionedId:"workloads/azure/backend/netcore/introduction_netcore",id:"workloads/azure/backend/netcore/introduction_netcore",isDocsHomePage:!1,title:"Introduction to the .Net Core REST API application",description:"This is a sample .NetCore REST API application with CQRS, showcasing best coding practices and integrating with Azure",source:"@site/docs/workloads/azure/backend/netcore/introduction_netcore.md",slug:"/workloads/azure/backend/netcore/introduction_netcore",permalink:"/stacks/docs/workloads/azure/backend/netcore/introduction_netcore",editUrl:"https://github.com/amido/stacks/docs/workloads/azure/backend/netcore/introduction_netcore.md",version:"current",sidebar_label:"Introduction",sidebar:"docs",previous:{title:"Java Rest API Structure",permalink:"/stacks/docs/workloads/azure/backend/java_cqrs/structure_java_cqrs"},next:{title:"Requirements",permalink:"/stacks/docs/workloads/azure/backend/netcore/quickstart/requirements_netcore"}},s=[],u={rightToc:s};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"This is a sample .NetCore REST API application with CQRS, showcasing best coding practices and integrating with Azure\nand scaffolding for Amido Stacks."),Object(a.b)("p",null,"The application implements Application Insights for performance management,\nand Cosmos DB is used for cloud persistence."))}p.isMDXComponent=!0}}]);