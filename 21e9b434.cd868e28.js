(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{149:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),h=r,d=p["".concat(o,".").concat(h)]||p[h]||b[h]||i;return n?a.a.createElement(d,s(s({ref:t},u),{},{components:n})):a.a.createElement(d,s({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),i=(n(0),n(149)),o={id:"publishing_nuget",title:"Publishing NuGet Packages",sidebar_label:"Publishing NuGet Packages",hide_table_of_contents:!1},s={unversionedId:"packages/nuget/publishing_nuget",id:"packages/nuget/publishing_nuget",isDocsHomePage:!1,title:"Publishing NuGet Packages",description:"NuGet",source:"@site/docs/packages/nuget/publishing_nuget.md",slug:"/packages/nuget/publishing_nuget",permalink:"/stacks/docs/packages/nuget/publishing_nuget",editUrl:"https://github.com/amido/stacks/docs/packages/nuget/publishing_nuget.md",version:"current",sidebar_label:"Publishing NuGet Packages",sidebar:"docs",previous:{title:"scaffolding-cli",permalink:"/stacks/docs/packages/npm/scaffolding-cli/scaffolding_cli"},next:{title:"Dependencies and Version Management",permalink:"/stacks/docs/packages/maven/dependency_management"}},c=[{value:"NuGet",id:"nuget",children:[{value:"What we publish",id:"what-we-publish",children:[]},{value:"Where the packages are published",id:"where-the-packages-are-published",children:[]},{value:"How we publish",id:"how-we-publish",children:[]},{value:"Known issues",id:"known-issues",children:[]}]}],u={rightToc:c};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"nuget"},"NuGet"),Object(i.b)("p",null,"We have an open-source listed organisation with multiple packages."),Object(i.b)("h3",{id:"what-we-publish"},"What we publish"),Object(i.b)("p",null,"We have a number of NuGet packages that we publish openly. The source code may not be published, but the packages are free to consume."),Object(i.b)("h3",{id:"where-the-packages-are-published"},"Where the packages are published"),Object(i.b)("p",null,"We are publishing them to: ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.nuget.org/profiles/amidostacks"}),"https://www.nuget.org/profiles/amidostacks")),Object(i.b)("h3",{id:"how-we-publish"},"How we publish"),Object(i.b)("p",null,"Once the committed code passes through the quality gates in the pipeline, then the packages will be published automatically. It's up to the consumer to adopt the latest versions."),Object(i.b)("p",null,"To publish locally:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"dotnet nuget push --api-key $(NUGET_API_KEY) --source https://api.nuget.org/v3/index.json  **/*.nupkg --skip-duplicate --no-symbols true")),Object(i.b)("h3",{id:"known-issues"},"Known issues"),Object(i.b)("p",null,"There is bug in .NET Core 2.1 SDK which returns a 409 on trying to publish the symbols package.\nSee ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-push"}),"dotnet nuget push")," for more information"),Object(i.b)("p",null,"When attempting to publish, we will get the following response:\n",Object(i.b)("inlineCode",{parentName:"p"},"error: File does not exist (**/*.snupkg).")),Object(i.b)("p",null,"In order to remedy this, we set the ",Object(i.b)("inlineCode",{parentName:"p"},"--no-symbols")," option. The symbols will then need to be published separately."))}l.isMDXComponent=!0}}]);