(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{131:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return f}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(a),b=n,f=d["".concat(o,".").concat(b)]||d[b]||u[b]||c;return a?r.a.createElement(f,s(s({ref:t},p),{},{components:a})):r.a.createElement(f,s({ref:t},p))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=b;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<c;p++)o[p]=a[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},87:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return l}));var n=a(2),r=a(6),c=(a(0),a(131)),o={id:"packages",title:"Packages",sidebar_label:"Packages",hide_table_of_contents:!1},s={unversionedId:"packages/packages",id:"packages/packages",isDocsHomePage:!1,title:"Packages",description:"Front end packages",source:"@site/docs/packages/packages.md",slug:"/packages/packages",permalink:"/stacks/docs/packages/packages",editUrl:"https://github.com/amido/stacks/docs/packages/packages.md",version:"current",sidebar_label:"Packages",sidebar:"docs",previous:{title:"Testing - Static Code Analysis",permalink:"/stacks/docs/testing/testing_static"},next:{title:"Publishing Packages",permalink:"/stacks/docs/packages/npm/publishing"}},i=[{value:"Front end packages",id:"front-end-packages",children:[{value:"<code>eslint</code>",id:"eslint",children:[]},{value:"<code>scaffolding-cli</code>",id:"scaffolding-cli",children:[]}]},{value:"Infrastructure as code",id:"infrastructure-as-code",children:[{value:"<code>azDevOps/azure/templates</code>",id:"azdevopsazuretemplates",children:[]}]}],p={rightToc:i};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"front-end-packages"},"Front end packages"),Object(c.b)("p",null,"Published packages ready for consumption."),Object(c.b)("h3",{id:"eslint"},Object(c.b)("inlineCode",{parentName:"h3"},"eslint")),Object(c.b)("p",null,"Shared ESLint config to guide a consistent code style across front end development in (and outside!) ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://amido.com"}),"Amido"),"."),Object(c.b)("p",null,"\ud83d\udcd6 ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/amido/stacks-webapp-template/blob/master/packages/eslint-config/README.md"}),"Read the Docs")),Object(c.b)("h3",{id:"scaffolding-cli"},Object(c.b)("inlineCode",{parentName:"h3"},"scaffolding-cli")),Object(c.b)("p",null,"Builds opinionated boilerplate project types (CSR, SSR, .NET API, Test Frameworks...) with accompanying infrastructure code. All from your CLI."),Object(c.b)("p",null,"\ud83d\udcd6 ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/amido/stacks-webapp-template/blob/master/packages/scaffolding-cli/README.md"}),"Read the Docs")),Object(c.b)("h2",{id:"infrastructure-as-code"},"Infrastructure as code"),Object(c.b)("p",null,"All things typically DevOps!"),Object(c.b)("h3",{id:"azdevopsazuretemplates"},Object(c.b)("inlineCode",{parentName:"h3"},"azDevOps/azure/templates")),Object(c.b)("p",null,"This templates are provided as a base standard process for deploying stacks infrastructure. For usage on ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://azure.microsoft.com/en-gb/services/devops/pipelines/"}),"Azure DevOps Pipelines"),"."),Object(c.b)("p",null,"\ud83d\udcd6 ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/amido/stacks-pipeline-templates/blob/master/README.md"}),"Read the Docs")))}l.isMDXComponent=!0}}]);