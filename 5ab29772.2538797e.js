(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{131:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(n),u=a,m=b["".concat(i,".").concat(u)]||b[u]||d[u]||r;return n?o.a.createElement(m,l(l({ref:t},p),{},{components:n})):o.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(2),o=n(6),r=(n(0),n(131)),i={id:"getting_started_dev_dotnet",title:"Using the repo to build the Dotnet application locally",sidebar_label:"Dev [Dotnet] - Using the repo to build the Dotnet application locally"},l={unversionedId:"getting_started_dev_dotnet",id:"getting_started_dev_dotnet",isDocsHomePage:!1,title:"Using the repo to build the Dotnet application locally",description:"GETTING STARTED WITH THE DOTNET APPLICATION",source:"@site/docs/getting_started_dev_dotnet.md",slug:"/getting_started_dev_dotnet",permalink:"/stacks/docs/getting_started_dev_dotnet",editUrl:"https://github.com/amido/stacks/docs/getting_started_dev_dotnet.md",version:"current",sidebar_label:"Dev [Dotnet] - Using the repo to build the Dotnet application locally",sidebar:"docs",previous:{title:"Using the repo to build the Java application locally",permalink:"/stacks/docs/getting_started_dev_java"},next:{title:"Workloads",permalink:"/stacks/docs/workloads/workloads"}},c=[{value:"GETTING STARTED WITH THE DOTNET APPLICATION",id:"getting-started-with-the-dotnet-application",children:[{value:"RUNNING THE APPLICATION LOCALLY",id:"running-the-application-locally",children:[]},{value:"USING A DOCKER IMAGE",id:"using-a-docker-image",children:[]}]},{value:"USING THE STACKS DOTNET TEMPLATE",id:"using-the-stacks-dotnet-template",children:[{value:"INSTALLING THE TEMPLATE",id:"installing-the-template",children:[]},{value:"CREATE A NEW APPLICATION USING THE TEMPLATE",id:"create-a-new-application-using-the-template",children:[]},{value:"RUNNING THE APPLICATION",id:"running-the-application",children:[]}]},{value:"USING THE SCAFFOLDING CLI TO CREATE A DOTNET PROJECT",id:"using-the-scaffolding-cli-to-create-a-dotnet-project",children:[]}],p={rightToc:c};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"getting-started-with-the-dotnet-application"},"GETTING STARTED WITH THE DOTNET APPLICATION"),Object(r.b)("h3",{id:"running-the-application-locally"},"RUNNING THE APPLICATION LOCALLY"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Clone the Dotnet project to your local machine from here: ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/amido/stacks-dotnet"}),"stacks-dotnet repository"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Configure required environment variables"),Object(r.b)("p",{parentName:"li"}," The application is currently configured to work with the Azure environment."),Object(r.b)("p",{parentName:"li"}," It uses an Azure ",Object(r.b)("strong",{parentName:"p"},"CosmosDB")," database to store the example application data.\nThere is a corresponding environment variable that needs to be set to interact with CosmosDB:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"COSMOSDB_KEY\n")),Object(r.b)("p",{parentName:"li"}," For Unix systems, set as additional variable within e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"~/.profile")," or ",Object(r.b)("inlineCode",{parentName:"p"},"/etc/profile"),"."),Object(r.b)("p",{parentName:"li"}," For Windows, open System Properties then select the Advanced tab, then click on the Environment Variables button and add the new parameter."),Object(r.b)("p",{parentName:"li"}," Note: For running on local environments, you can use the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/cosmos-db/local-emulator?tabs=ssl-netstd21"}),"Cosmos DB emulator")," (CosmosDB Emulator has a known fixed key)."),Object(r.b)("p",{parentName:"li"}," If not running locally, you additionally need to set the CosmosDB URI parameter ",Object(r.b)("inlineCode",{parentName:"p"},"DatabaseAccountUri")," within the\nfile ",Object(r.b)("inlineCode",{parentName:"p"},"<PROJECT-NAME>/src/api/xxAMIDOxx.xxSTACKSxx.API/appsettings.json"),":"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),'"DatabaseAccountUri": "https://REPLACE-ME-WITH-COSMOSDB.documents.azure.com:443/"\n'))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Build and run the application"),Object(r.b)("p",{parentName:"li"},"Move to the ",Object(r.b)("inlineCode",{parentName:"p"},"<PROJECT-NAME>/src/api")," folder, then"),Object(r.b)("p",{parentName:"li"},"Unix:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"export COSMOSDB_KEY=${COSMOSDB_KEY}\n\ndotnet restore\ndotnet clean\ndotnet build\ndotnet run --project xxAMIDOxx.xxSTACKSxx.API/xxAMIDOxx.xxSTACKSxx.API.csproj\n")),Object(r.b)("p",{parentName:"li"},"Windows:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"TODO\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Verify that the application has started"),Object(r.b)("p",{parentName:"li"},"Browse to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://localhost:5000/v1/menu"}),"http://localhost:5000/v1/menu"),". This should return a valid JSON response."),Object(r.b)("p",{parentName:"li"},"The application configuration uses Swagger/OAS3 to represent the API endpoints. The Swagger UI can be viewed by directing your\nbrowser to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"http://localhost:5000/swagger/index.html"}),"http://localhost:5000/swagger/index.html"),"."))),Object(r.b)("h3",{id:"using-a-docker-image"},"USING A DOCKER IMAGE"),Object(r.b)("p",null,"From the ",Object(r.b)("inlineCode",{parentName:"p"},"<PROJECT-NAME>/src/api")," folder, build a Docker image using e.g. the command below:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"docker build -t dotnet-api .\n")),Object(r.b)("p",null,"This uses the ",Object(r.b)("inlineCode",{parentName:"p"},"Dockerfile")," in this folder to generate the Docker image."),Object(r.b)("p",null,"Once the Docker image is created, you can then run a Docker container based on this image using e.g."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"docker run -p 5000:80 --mount type=bind,source=/path/to/PROJECT-NAME/src/api/xxAMIDOxx.xxSTACKSxx.API/appsettings.json,target=/app/config/appsettings.json -e COSMOSDB_KEY=your-key dotnet-api:latest\n")),Object(r.b)("p",null,"where the ",Object(r.b)("inlineCode",{parentName:"p"},"COSMOSDB_KEY")," is the value as described above. Note that the ",Object(r.b)("inlineCode",{parentName:"p"},"appsettings.json")," value is mounted here for running locally,\nbut not if the full project is deployed to Azure, where the build process will perform the substitution."),Object(r.b)("h4",{id:"swaggeroas"},"SWAGGER/OAS"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Automatically generated for the project. Go to ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"http://localhost:5000/swagger/index.html"}),"Swagger Index")," to view."),Object(r.b)("li",{parentName:"ul"},"Swagger Json is here: ",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"http://localhost:5000/swagger/oas.json"}),"Swagger Json"))),Object(r.b)("h2",{id:"using-the-stacks-dotnet-template"},"USING THE STACKS DOTNET TEMPLATE"),Object(r.b)("p",null,"The Stacks template is a template for the ",Object(r.b)("inlineCode",{parentName:"p"},"dotnet new")," command, and used to create a new application repository based on the Stacks structure."),Object(r.b)("p",null,"The Amido Stacks structure uses a naming convention for many folders in order to make the process simple and intuitive.\nFor that reason, you are advised to create the whole application structure and then remove the parts that are not needed."),Object(r.b)("h3",{id:"installing-the-template"},"INSTALLING THE TEMPLATE"),Object(r.b)("p",null,"If you have installed the Stacks template before, it is recommended that you remove older versions before installing the new one.\nTo remove it, run the following command:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"dotnet new -u stacks-app-template\n")),Object(r.b)("p",null,"Note: if you don't have a previous installed, the command will fail, you can skip to the next step."),Object(r.b)("p",null,"Download the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/amido/stacks-dotnet/releases/tag/1.0.0"}),"stacks-app-template.1.0.0.nupkg template package"),"\n(.Net Core 3.1, current LTS release) to a temporary folder."),Object(r.b)("p",null,"Install this package:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"dotnet new -i /path/to/stacks-app-template.1.0.0.nupkg\n")),Object(r.b)("p",null,"Once this has completed, a list of available templates will be displayed on the screen.\nCheck to ensure that the template ",Object(r.b)("strong",{parentName:"p"},"Amido Stacks Application Repository")," is present in the list."),Object(r.b)("h3",{id:"create-a-new-application-using-the-template"},"CREATE A NEW APPLICATION USING THE TEMPLATE"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"dotnet new stacks-app -n Company.Project -d DomainName\n")),Object(r.b)("p",null,"The above command will create a folder and a repository called ",Object(r.b)("inlineCode",{parentName:"p"},"Company.Project"),"."),Object(r.b)("p",null,"If you omit the parameter ",Object(r.b)("inlineCode",{parentName:"p"},"-n"),", the CLI will create the project using the name of the folder the command is being run from\n(e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"c:\\demo\\amido-sample> dotnet new stacks-app")," will generate a project called ",Object(r.b)("inlineCode",{parentName:"p"},"amido-sample"),").\nTo prevent the creation of a new folder you can pass the parameter ",Object(r.b)("inlineCode",{parentName:"p"},"-o")," with a path name\ne.g. ",Object(r.b)("inlineCode",{parentName:"p"},"dotnet new stacks-app -o ./foldername"),")."),Object(r.b)("p",null,"The parameter ",Object(r.b)("inlineCode",{parentName:"p"},"-d")," is a short name for ",Object(r.b)("inlineCode",{parentName:"p"},"--Domain"),". Domain is the name used by the aggregate root object,\nand referenced in multiple place in the project. It is used as the name of the collection within the CosmosDB instance."),Object(r.b)("h3",{id:"running-the-application"},"RUNNING THE APPLICATION"),Object(r.b)("p",null,"The template does not set up the application configuration required to run. Before you attempt to start the\napplication make sure it is configured properly."),Object(r.b)("p",null,"Assuming you have already installed all dependencies required (i.e. CosmosDB emulator, or you have access to a CosmosDB instance)\nyou will need to configure the application to connect to the database. Ensure that the ",Object(r.b)("inlineCode",{parentName:"p"},"DatabaseAccountUri")," value is set\n(as per the instructions above for running the application locally)."),Object(r.b)("p",null,"By default, on a developer machine, the template is configured to connect to a local CosmosDB emulator - make sure you\ncreate a database (default is ",Object(r.b)("inlineCode",{parentName:"p"},"Stacks"),") and a collection within it (the default collection expected\nis the ",Object(r.b)("inlineCode",{parentName:"p"},"DomainName")," value supplied when creating the application)."),Object(r.b)("p",null,"The collection partition key by default uses the ID (",Object(r.b)("inlineCode",{parentName:"p"},"/id"),")."),Object(r.b)("p",null,"You should also ensure that the ",Object(r.b)("inlineCode",{parentName:"p"},"Company.Project.API/Properties/launchSettings.json")," file has the correct ",Object(r.b)("inlineCode",{parentName:"p"},"COSMOSDB_KEY")," value set."),Object(r.b)("p",null,"Once these are configured correctly, load the project into Visual Studio and press ",Object(r.b)("inlineCode",{parentName:"p"},"F5")," to start a debug process.\nThe browser will open, and you should be presented with a Swagger UI page showing the default api endpoints with their\nCRUD operations."),Object(r.b)("p",null,"Alternatively, you can run these steps from the command line:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"dotnet restore\ndotnet clean\ndotnet build\n\ndotnet run --project Company.Project.API/Company.Project.API.csproj\n")),Object(r.b)("p",null,"The deployment pipeline should be configured with the DevOps team in order to set up the right dependencies."),Object(r.b)("h4",{id:"caveats"},"CAVEATS"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The ContractTests project has a limitation due to a Windows path length size. When the project is running on Windows\nfrom a long path length, the build will fail. If this is the case, you may need to move the project into a\nfolder where the path is shorter."),Object(r.b)("li",{parentName:"ul"},"All secrets are loaded from environment variables. Due to a bug in Visual Studio, the environment variables for a test\nproject are not set when running the tests. For integration tests, ensure you set these environment variables\nbefore you open Visual Studio."),Object(r.b)("li",{parentName:"ul"},"The current template requires dotnet core SDK 3.1. Ensure that it is installed before running the application.\nTo check the installed version run the command ",Object(r.b)("inlineCode",{parentName:"li"},"dotnet --version"))),Object(r.b)("h2",{id:"using-the-scaffolding-cli-to-create-a-dotnet-project"},"USING THE SCAFFOLDING CLI TO CREATE A DOTNET PROJECT"),Object(r.b)("p",null,"The Amido Stacks Scaffolding CLI can be used to create a fully-functional and deployable project from a template, in a variety of flavours.\nIt includes tests (unit, integration), together with infrastructure and deployment definitions. All by running from your CLI."),Object(r.b)("p",null,"We use ",Object(r.b)("inlineCode",{parentName:"p"},"npx")," to execute and create the\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/@amidostacks/scaffolding-cli"}),"template-cli"),"\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.npmjs.com/package/npx"}),"npx"),"."),Object(r.b)("p",null,"We are supporting and running ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org/en/about/releases/"}),"node@12"),".\nPlease ensure that your local environment has the correct version ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://nodejs.org/en/download/"}),"installed"),"."),Object(r.b)("p",null,"To run the Scaffolding CLI, use the following commands"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"npx @amidostacks/scaffolding-cli@latest run -i\n")),Object(r.b)("p",null,"You will be asked a number of questions. Based on the answers, your ready-to-build project template will be produced."))}s.isMDXComponent=!0}}]);